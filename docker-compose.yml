version: '3'
services:
  backend:
    restart: always
    container_name: back
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - ./backend/.env
    environment:
      # NODE_ENV: development
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      - db
    volumes:
      - ./backend:/app
      - /app/node_modules
    # networks:
    #   - app-network

  frontend:
    restart: always
    container_name: front
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8081:80"
    volumes:
      - ./frontend/public:/usr/share/nginx/html
    # networks:
    #   - app-network

  db:
    image: postgres:13
    container_name: db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file:
      - ./backend/.env
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # networks:
    #   - app-network

  # nginx:
  #   image: nginx:latest
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./default.conf:/etc/nginx/conf.d/default.conf
  #   depends_on:
  #     - frontend
  #     - backend
  #   networks:
  #     - app-network

volumes:
  postgres_data:

# networks:
#   app-network:
#     driver: bridge